name: ci

on:
  push:
    branches:
    - main
    - develop
    - experimental
    tags:
    - "*"
  pull_request:
    branches:
    - main
    - develop
    - experimental
  pull_request_target:
    types: [labeled]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

jobs:
  pre-commit:
    if: ${{ !github.event.pull_request.head.repo.fork && github.event.action != 'labeled' || github.event.label.name == 'approved-for-ci' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
    - uses: actions/setup-python@v4
      with:
        python-version: 3.x
    - uses: pre-commit/action@v3.0.0

  unit-tests:
    name: unit-tests (3.10)
    if: ${{ !github.event.pull_request.head.repo.fork && github.event.action != 'labeled' || github.event.label.name == 'approved-for-ci' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
    - name: Install Conda environment with Micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: environment.yml
        environment-name: DEVELOP
        cache-environment: true
        create-args: >-
          python=3.10
    - name: Install package
      run: |
        python -m pip install --no-deps -e .
    - name: Run tests
      run: |
        make unit-tests

  integration-tests:
    needs: [unit-tests]
    if: ${{ !github.event.pull_request.head.repo.fork && github.event.action != 'labeled' || github.event.label.name == 'approved-for-ci' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        include:
        - python-version: "3.10"
              # extra: -minver  # This will need to be uncommented and environment-minver.yml updated if we want to publish on conda

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
    - name: Install Conda environment with Micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: environment${{ matrix.extra }}.yml
        environment-name: DEVELOP${{ matrix.extra }}
        cache-environment: true
        cache-environment-key: ubuntu-latest-${{ matrix.python-version }}${{ matrix.extra }}.
        create-args: >-
          python=${{matrix.python-version }}
    - name: Install package
      run: |
        python -m pip install --no-deps -e .
    - name: Run tests
      run: |
        make unit-tests

  image-tests:
    name: image-tests
    needs: [unit-tests]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - name: Install Conda environment with Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          environment-name: IMAGE-TESTS
          cache-environment: true
          create-args: >-
            python=3.10
      - name: Install package
        run: |
          python -m pip install --no-deps -e .
      - name: Run image tests
        run: make image-tests
      - name: Upload mpl-results HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mpl-results
          path: mpl-results/

  distribution:
    needs: [integration-tests]
    if: ${{ !github.event.pull_request.head.repo.fork && github.event.action != 'labeled' || github.event.label.name == 'approved-for-ci' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha || github.ref }}
    - name: Build distributions
      run: |
        $CONDA/bin/python -m pip install build
        $CONDA/bin/python -m build
    - name: Publish a Python distribution to PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
